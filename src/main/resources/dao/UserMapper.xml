<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.entity.User">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="identity_number" jdbcType="VARCHAR" property="identityNumber"/>
        <result column="gender" jdbcType="VARCHAR" property="gender"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="identity" jdbcType="VARCHAR" property="identity"/>
        <result column="del_flag" jdbcType="CHAR" property="delFlag"/>
<!--        <collection property="collegeList" ofType="com.example.demo.entity.Office">-->
<!--            <id property="id" column="office_id"/>-->
<!--            <result property="name" column="office.name"/>-->
<!--        </collection>-->
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, name, username, password, identity_number, gender, email, identity, del_flag
    </sql>
    <sql id="UserSearch_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        u.id, u.name, u.username, u.password, u.identity_number, u.gender, u.email, u.identity, u.del_flag,uia.*
    </sql>
    <sql id="UserSearch_Joins_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        LEFT JOIN user_info_all uia ON uia.user_id = u.id
    </sql>
    <select id="selectByExample" parameterType="com.example.demo.entity.UserExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from user
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.example.demo.entity.UserExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <update id="deleteUserRoleForm"  parameterType="com.example.demo.entity.User">
        update user_info_all uia
        set uia.del_flag = #{delflag}
        WHERE uia.user_id = #{userid}
          AND uia.identitys_id = #{identitysid}
          AND uia.grade = #{grade}
          AND uia.college_id = #{collegeid}
          <if test="param6 == null">
              AND uia.major_id = #{majorid}
          </if>

          AND uia.role_id = #{roleid}


    </update>
    <insert id="insert" parameterType="com.example.demo.entity.User">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into user (id, name, username,
        password, identity_number, gender,
        email, identity, del_flag
        )
        values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
        #{password,jdbcType=VARCHAR}, #{identityNumber,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR}, #{identity,jdbcType=VARCHAR}, #{delFlag,jdbcType=CHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.example.demo.entity.User">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="identityNumber != null">
                identity_number,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="identity != null">
                identity,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="identityNumber != null">
                #{identityNumber,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="identity != null">
                #{identity,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.demo.entity.UserExample" resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.identityNumber != null">
                identity_number = #{record.identityNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.gender != null">
                gender = #{record.gender,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.identity != null">
                identity = #{record.identity,jdbcType=VARCHAR},
            </if>
            <if test="record.delFlag != null">
                del_flag = #{record.delFlag,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update user
        set id = #{record.id,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        username = #{record.username,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        identity_number = #{record.identityNumber,jdbcType=VARCHAR},
        gender = #{record.gender,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        identity = #{record.identity,jdbcType=VARCHAR},
        del_flag = #{record.delFlag,jdbcType=CHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.User">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update user
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="identityNumber != null">
                identity_number = #{identityNumber,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="identity != null">
                identity = #{identity,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.User">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update user
        set name = #{name,jdbcType=VARCHAR},
        username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        identity_number = #{identityNumber,jdbcType=VARCHAR},
        gender = #{gender,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        identity = #{identity,jdbcType=VARCHAR},
        del_flag = #{delFlag,jdbcType=CHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <insert id="insertUserInfoAll" parameterType="com.example.demo.entity.User">
        insert into user_info_all(user_id, college_id, major_id, identitys_id, grade, role_id, del_flag)
        values (#{id}, #{collegeid}, #{majorid},
                ${identitys}, ${grade}, ${roleId}, 0)

    </insert>
<!--    <select id="getuserListByPageAndRows" resultType="com.example.demo.entity.User">-->
<!--        select *-->
<!--        FROM user-->
<!--        &lt;!&ndash;      <if test="#{selectname} !=null and #{selectname} !=''">&ndash;&gt;-->
<!--        &lt;!&ndash;        WHERE username LIKE '%${selectname}%'&ndash;&gt;-->
<!--        &lt;!&ndash;      </if>&ndash;&gt;-->
<!--        WHERE username LIKE '%%' AND del_flag = 0-->
<!--        LIMIT #{page,jdbcType=INTEGER},#{rows,jdbcType=INTEGER}-->
<!--    </select>-->
    <select id="getuserListByPageAndRows" resultType="com.example.demo.entity.User">
        select
        u.id,
        u.name,
        u.username,
        u.password,
        u.identity_number AS "identityNumber",
        u.gender,
        u.email,
        u.identity,
        u.del_flag,
        co.name AS "collegeCnName",
        ma.name AS "majorCnName",
        r.name AS "roleCnName",
        r.id AS "roleId",
        uia.identitys_id AS "identitysid",
        uia.grade AS "grade",
        uia.college_id AS "collegeid",
        uia.major_id AS "majorid",
        uia.uia_id AS "uiaid"


        FROM user u
        LEFT JOIN user_info_all uia ON uia.user_id = u.id
        LEFT JOIN office co ON uia.college_id = co.id
        LEFT JOIN office ma ON uia.major_id = ma.id
        LEFT JOIN role r ON uia.role_id = r.id
        <if test="selectname == null">
            WHERE identity_number LIKE '%%'
            AND u.del_flag = 0 AND uia.del_flag = 0
        </if>
        <if test="selectname !=null">

            WHERE identity_number LIKE '%${selectname}%'
            AND u.del_flag = 0 AND uia.del_flag = 0
        </if>

        LIMIT #{page,jdbcType=INTEGER},#{rows,jdbcType=INTEGER}
    </select>
    <select id="getAllCountBySelectname" resultType="java.lang.Integer">

        select count(*)
        from user u
                 LEFT JOIN user_info_all uia on u.id = uia.user_id

        WHERE username LIKE '%${_parameter}%'
          AND u.del_flag = 0
          AND uia.del_flag = 0
        order by u.id
    </select>
    <select id="getAllCount" resultType="java.lang.Integer">

        select count(*)
        from user
        WHERE del_flag = 0
        order by user.id
    </select>
    <select id="getPasswordByid" resultType="java.lang.String">
        select password
        from user
        where id = #{id}
          AND del_flag = 0
    </select>
    <select id="getUserCountByidentityNumber" resultType="java.lang.Integer">
        select count(*)
        from user
        where identity_number = #{identityNumber,jdbcType = VARCHAR}
          AND del_flag = 0
    </select>
    <select id="getUserCountByusername" resultType="java.lang.Integer">
        select count(*)
        from user
        where username = #{username,jdbcType = VARCHAR}
          AND del_flag = 0
    </select>
    <select id="getGradeListById" resultType="com.example.demo.entity.User">

        SELECT DISTINCT uia.grade
        FROM user u
                 LEFT JOIN user_info_all uia ON u.id = uia.user_id
        WHERE u.del_flag = 0
          AND u.id = #{userid}
        order by uia.grade
    </select>
    <select id="getrolenameByroleid" resultType="java.lang.String">

        SELECT name
        FROM role
        WHERE id = #{roleId,jdbcType = VARCHAR}
          AND del_flag = 0
    </select>

    <!--    <select id="getUserByUserId" resultType="com.example.demo.entity.User">-->
    <!--        select-->
    <!--        <include refid="Base_Column_List"/>-->
    <!--        FROM user-->
    <!--        where id = #{userid,jdbcType = VARCHAR}-->
    <!--          AND del_flag = 0-->
    <!--    </select>-->
</mapper>